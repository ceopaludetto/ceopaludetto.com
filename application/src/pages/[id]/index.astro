---
import type { InferGetStaticPropsType } from "astro";

import { getCollection, render } from "astro:content";
import { formatDate } from "date-fns";

import Base from "~/layouts/base.astro";
import Post from "~/layouts/post.astro";
import { collectDependenciesFromPost } from "~/utilities/dependencies";

export async function getStaticPaths() {
	return (await getCollection("posts", ({ data }) => import.meta.env.DEV || !data.draft))
		.map((entry) => ({ params: { id: entry.id }, props: { entry } }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props;
const { Content } = await render(entry);

const image = `${import.meta.env.SITE}/${entry.id}/image.png`;
const canonical = `${import.meta.env.SITE}/${entry.id}`;

const dependencies = await collectDependenciesFromPost(entry);
---

<Base title={`${entry.data.title} â€” ceo`} color={entry.data.color}>
	<Fragment slot="meta">
		<meta name="description" content={entry.data.description} />
		<link rel="canonical" href={canonical} />

		<meta property="og:title" content={entry.data.title} />
		<meta property="og:description" content={entry.data.description} />
		<meta property="og:url" content={canonical} />
		<meta property="og:image" content={image} />
		<meta property="og:type" content="article" />

		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={entry.data.title} />
		<meta name="twitter:description" content={entry.data.description} />
		<meta name="twitter:image" content={image} />
		<meta name="twitter:creator" content="@ceopaludetto" />
	</Fragment>
	<Post>
		<h1 class="mb-1">{entry.data.title}</h1>
		<p class="mb-8 mt-0 text-body-large text-on-surface-variant">{formatDate(entry.data.date, "MMMM d, yyyy")}</p>
		<Content />
		<h3>Dependency map</h3>
		{dependencies.length > 0 && (
			<div class="-mx-4 flex gap-x-3 overflow-x-auto px-4">
				{dependencies.map(([dependency, version]) => (
					// eslint-disable-next-line style/max-len
					<span class="inline-flex h-8 items-center text-nowrap rounded-md bg-secondary-container px-2 font-mono text-label-large text-on-secondary-container">
						{dependency}@{version}
					</span>
				))}
			</div>
		)}
		<hr />
	</Post>
</Base>

